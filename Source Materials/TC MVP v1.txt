TransCredit MVP


1. Technology Stack:
Frontend:
* Blazor (C#) - Сore frontend framework across all projects. Must align with existing portal modules and component library.
* Razor Components / Shared UI Kit - Reuse Plateau Group’s internal component library and DMZ Bootstrap-based Blazor controls.
* Styling Consistency – Follow existing internal web portal (PlateauGroup.Web) standards, compiled via Web Compiler SCSS.


Backend:
* C# / .NET 8 API layer - Business logic, data validation, workflow, audit, and integrations.
* Microsoft SQL Server - Centralised relational DB for Certificates
* Entity Framework Core - ORM for database communication.
* Plateau Services Layer – Shared API for report and remittance processing.


Deployment and Environments:
* The main repo contains both the Internal and DMZ projects.
* Daily commits → feature branches → review → merge to main (repo shared with Plateau team).
* Plateau executes the final merge and deployment via the existing internal pipeline.
* Standard four-tier model (Dev/Test/UAT/Prod).


Authentication / Authorisation:
* Azure Active Directory (SSO + MFA) – Confirmed as the primary auth provider for internal users.
* Auth0 – Used on public DMZ site for agents; new agents flagged for “initial setup wizard.”
* RBAC – Role-based access controlled by Active Directory groups (APS Admin, Operators, etc.).
* No new roles required for MVP; existing groups cover all permissions.


Integrations:
* DocMgmt & OCR - Existing document ingestion system with PSI scanners and AI OCR. Exports recognised data to S_CertImports.
* DMZ → Internal Sync - API-based synchronisation for agent corrections.
* Email Service – Microsoft 365 SMTP; outbound queued in Plateau DB and processed internally.






















2. Feature List:


Feature
	Description
	Est., H
[a]	
DMZ Certificates Portal
	Expose a DMZ page where agents are able to:
Create a report. 
Upload certificates into it.
Open a “pending report,” see all copied certificates and supporting data for that report, and start a correction session. Agents authenticate via Auth0 MFA. 
	

	DMZ Certificate Update Forms
	Allow agents to edit only the fields that require correction for the pending report (not full data entry).
Save changes in the DMZ database.
When an agent finishes editing, insert an OpsLog record so internal users are notified that a report is ready for review and approval. 
After internal approval, update core tables with approved values and delete the temporary agent report and certificate records from DMZ.
Permit agents to upload a structured spreadsheet (CSV/XLSX) with corrections for all or selected certificates on the pending report; parse, validate schema, and stage the row-level deltas for review.
	

	OCR Ingestion Integration
	Consume structured data exported by the existing DocMgmt + AI OCR pipeline (which ingests the agents’ scanned forms). 
Do not build OCR; integrate with its output tables/feeds.
	

	Cert QA Review UI
	Provide an internal web UI for operators to verify OCR-extracted fields, complete missing data, and mark each row Pass/Fail before promoting into APS Plateau certificates.
	

	Certificate Import & Idempotency
	On QA “Pass,” create or update certificates in APSmPlateau with deterministic keys to avoid duplicates; track source (OCR/DMZ/manual) and the original document reference for audit. 
	

	Enhanced Certificate Search
	Extend CertificateSearch component with fields: 
First/Last Name (wildcards), 
Birthday, 
SSN (incl. last 4 digits), 
Claim Number; 
index fields for performance and support partial matches.
	

	Certificate Error Checking Service
	Port snapshot/error logic from Access/SQL into a C# service used by QA, DMZ-review, and internal edits: age limits, 30-day free-look refunds, coverage/amount limits, duplicate policy detection, refund method, birthday-based coverage end dates, etc.
	

	Error Summary UI 
	Surface grouped validation errors (by type and severity) for a report and per certificate; provide drill-down to failing fields and one-click export to spreadsheet.
	

	Correction & Approval Workflow
	Provide a side-by-side diff viewer (DMZ changes vs current values). Allow approve/reject per field or per certificate, apply changes to APS Plateau, and regenerate balances and error summaries after approval. 
	

	Balancing Module
	Compute and display deltas between agent report totals, certificate totals, and remittance figures; show the effect of corrections on balances and generate an exception/billing summary when deltas remain.
	

	Agent Notification
	Generate billing/exceptions message that clearly explains adjustments (reduced coverage, premium changes, refund corrections); support legally required customer notices when life/disability/AD&D premiums are changed.
Send the message to the DMZ portal
	

	Audit Trail & Logging
	On any edit to an existing certificate, require a “Reason for change,” and write a field-level audit record: ChangedValue (field), RecordId, OldValue, NewValue, Reason, ChangedBy, ChangeDate. Provide a collapsible CertAudit component on CertificateDetails.
	

	OpsLog Unification & Events
	Emit structured events to OpsLog for: DMZ staging, agent completion, QA approvals, certificate updates, comms sent/received, and balancing milestones - enabling end-to-end traceability and operational dashboards.
Сertificates and PDFs are stored in ShareFile.
	

	Email Server
	Service to track Inbound and Outbound emails based on Microsoft 365 SMTP
	

	Email Service UI
	Show all inbound/outbound emails with timestamps, subject/body preview, attachments list, and the linked AgentReportEmail ID; allow sending follow-ups directly from this tab.
	

	







3. Team Composition:
Role
	Responsibility
	Allocation
	Project Manager
	Client communication, scope control, prioritisation, and sprint planning.
	Cross
	Business Analyst
	Process mapping, requirement detailing, backlog management, user stories, and acceptance criteria.
	Cross
	Tech Lead
	Defines system architecture, integration approach, API contracts, data flow. Coordinates with Client SMEs
	As needed
	Developer FS
	Builds Blazor UI, forms, dashboards, and approval screens using the existing component kit.
Implements APIs, workflow logic, and data access
	1 FTE
	QA Engineer
	End-to-end testing, regression, and UAT support.
	As needed
	



4. Assumptions:
* The Certificates module will be developed inside the existing Plateau Web portal.
* No new standalone web app or DB server required.
* Use existing Azure AD / Auth0 authentication.
* DocMgmt + OCR system is assumed to exist and provide structured data output. Only integration and QA verification layers are in scope. If the OCR service is unavailable, Plateau will either provide its API or confirm the need for a replacement engine before development starts.
* All existing Access-based logic (snapshot checks, rule validations, and audit placeholders) can be accessed or exported for migration.
* Authentication and role management will rely on existing infrastructure: Azure AD (internal) and Auth0 (DMZ); no new identity provider is introduced.
* Document generation and storage will leverage existing ShareFile and DocMgmt infrastructure; no new PDF/letter builder will be introduced unless Plateau explicitly requests it.
* System non-functional goals (load, concurrency, RPO/RTO) are assumed to match existing Plateau web standards until defined otherwise.
* All outgoing agent communications will use Plateau’s Microsoft 365 SMTP relay, routed internally for compliance.


5. Risks:
* Unclear whether a functional OCR API/database already exists within DocMgmt; lack of clarity may lead to major architectural rework if a new OCR pipeline is required.
* No confirmed API or schema for OCR data export; may require discovery and schema mapping effort.
* If OCR or document generation are deemed “not existing,” MVP effort could increase by 30–50%.
* Unclear if Plateau has an active templating or PDF generation system (e.g., Write Signature, ShareFile automation). If not, new document generation logic will be needed.
* Access snapshot and validation rules are extensive and poorly documented; extracting and replicating logic may take longer than planned.
* Incomplete mapping between old Access tables and new SQL structures could delay certificate import and balancing.
* Inbound email threading may depend on Microsoft 365 API permissions not yet been confirmed.
* A lack of clarity on which totals (report, certificate, remittance) are authoritative could cause mismatched financial results.
* Legally required letters (life/disability/AD&D changes) must be generated correctly; if templates or workflows are missing, regulatory risk arises.
[a]@pavel.haletski@symfa.com в часах плз
1 total reaction
Pavel Haletski reacted with 👍 at 2025-10-30 13:49 PM
_Assigned to pavel.haletski@symfa.com_